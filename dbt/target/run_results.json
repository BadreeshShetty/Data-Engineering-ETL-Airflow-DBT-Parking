{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.3", "generated_at": "2024-07-15T15:26:30.610075Z", "invocation_id": "ca1f1a6a-5157-4e79-997f-b986d24f20dc", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.188781Z", "completed_at": "2024-07-15T15:26:30.197366Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.197916Z", "completed_at": "2024-07-15T15:26:30.197926Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010464668273925781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_nyc_parking_violations.silver_merge_all_parking_violations_MN", "compiled": true, "compiled_code": "WITH  __dbt__cte__bronze_parking_violations_2014 as (\n-- models/bronze/bronze_parking_violations.sql\nWITH base_data AS (\n    \n    SELECT \n        CAST(NULLIF(summons_number, 'N/A') AS BIGINT) AS summons_number,\n        NULLIF(plate_id, 'N/A') AS plate_id,\n        NULLIF(registration_state, 'N/A') AS registration_state,\n        NULLIF(plate_type, 'N/A') AS plate_type,\n        CAST(NULLIF(issue_date, 'N/A') AS DATE) AS issue_date,\n        CAST(NULLIF(violation_code, 'N/A') AS INT) AS violation_code,\n        NULLIF(vehicle_body_type, 'N/A') AS vehicle_body_type,\n        NULLIF(vehicle_make, 'N/A') AS vehicle_make,\n        NULLIF(issuing_agency, 'N/A') AS issuing_agency,\n        CAST(NULLIF(street_code1, 'N/A') AS INT) AS street_code1,\n        CAST(NULLIF(street_code2, 'N/A') AS INT) AS street_code2,\n        CAST(NULLIF(street_code3, 'N/A') AS INT) AS street_code3,\n        CAST(NULLIF(vehicle_expiration_date, 'N/A') AS DATE) AS vehicle_expiration_date,\n        NULLIF(violation_location, 'N/A') AS violation_location,\n        CAST(NULLIF(violation_precinct, 'N/A') AS INT) AS violation_precinct,\n        CAST(NULLIF(issuer_precinct, 'N/A') AS INT) AS issuer_precinct,\n        NULLIF(issuer_code, 'N/A') AS issuer_code,\n        NULLIF(issuer_command, 'N/A') AS issuer_command,\n        NULLIF(issuer_squad, 'N/A') AS issuer_squad,\n        NULLIF(violation_time, 'N/A') AS violation_time,\n        NULLIF(time_first_observed, 'N/A') AS time_first_observed,\n        NULLIF(violation_county, 'N/A') AS violation_county,\n        NULLIF(violation_in_front_of_or_opposite, 'N/A') AS violation_in_front_of_or_opposite,\n        NULLIF(intersecting_street, 'N/A') AS intersecting_street,\n        CAST(NULLIF(date_first_observed, 'N/A') AS DATE) AS date_first_observed,\n        NULLIF(law_section, 'N/A') AS law_section,\n        NULLIF(sub_division, 'N/A') AS sub_division,\n        NULLIF(violation_legal_code, 'N/A') AS violation_legal_code,\n        NULLIF(days_parking_in_effect____, 'N/A') AS days_parking_in_effect,\n        NULLIF(from_hours_in_effect, 'N/A') AS from_hours_in_effect,\n        NULLIF(to_hours_in_effect, 'N/A') AS to_hours_in_effect,\n        NULLIF(vehicle_color, 'N/A') AS vehicle_color,\n        CAST(NULLIF(unregistered_vehicle, 'N/A') AS BOOLEAN) AS unregistered_vehicle,\n        CAST(NULLIF(vehicle_year, 'N/A') AS INT) AS vehicle_year,\n        NULLIF(meter_number, 'N/A') AS meter_number,\n        CAST(NULLIF(feet_from_curb, 'N/A') AS INT) AS feet_from_curb,\n        NULLIF(violation_post_code, 'N/A') AS violation_post_code,\n        NULLIF(violation_description, 'N/A') AS violation_description,\n        CAST(NULLIF(no_standing_or_stopping_violation, 'N/A') AS BOOLEAN) AS no_standing_or_stopping_violation,\n        CAST(NULLIF(hydrant_violation, 'N/A') AS BOOLEAN) AS hydrant_violation,\n        CAST(NULLIF(double_parking_violation, 'N/A') AS BOOLEAN) AS double_parking_violation\n    FROM PARKING_DB.PARKING_SCHEMA.PARKING_VIOLATIONS_2014\n\n),\nenhanced_data AS (\n    \n    SELECT\n        *,\n        EXTRACT(YEAR FROM CURRENT_DATE) - vehicle_year AS vehicle_age,\n        CASE \n            WHEN violation_county = 'MN' THEN TRUE\n            ELSE FALSE\n        END AS is_manhattan_96th_st_below\n    FROM base_data\n\n)\nSELECT * FROM enhanced_data\n),  __dbt__cte__bronze_parking_violations_2016 as (\n-- models/bronze/bronze_parking_violations.sql\nWITH base_data AS (\n    \n    SELECT \n        CAST(NULLIF(summons_number, 'N/A') AS BIGINT) AS summons_number,\n        NULLIF(plate_id, 'N/A') AS plate_id,\n        NULLIF(registration_state, 'N/A') AS registration_state,\n        NULLIF(plate_type, 'N/A') AS plate_type,\n        CAST(NULLIF(issue_date, 'N/A') AS DATE) AS issue_date,\n        CAST(NULLIF(violation_code, 'N/A') AS INT) AS violation_code,\n        NULLIF(vehicle_body_type, 'N/A') AS vehicle_body_type,\n        NULLIF(vehicle_make, 'N/A') AS vehicle_make,\n        NULLIF(issuing_agency, 'N/A') AS issuing_agency,\n        CAST(NULLIF(street_code1, 'N/A') AS INT) AS street_code1,\n        CAST(NULLIF(street_code2, 'N/A') AS INT) AS street_code2,\n        CAST(NULLIF(street_code3, 'N/A') AS INT) AS street_code3,\n        CAST(NULLIF(vehicle_expiration_date, 'N/A') AS DATE) AS vehicle_expiration_date,\n        NULLIF(violation_location, 'N/A') AS violation_location,\n        CAST(NULLIF(violation_precinct, 'N/A') AS INT) AS violation_precinct,\n        CAST(NULLIF(issuer_precinct, 'N/A') AS INT) AS issuer_precinct,\n        NULLIF(issuer_code, 'N/A') AS issuer_code,\n        NULLIF(issuer_command, 'N/A') AS issuer_command,\n        NULLIF(issuer_squad, 'N/A') AS issuer_squad,\n        NULLIF(violation_time, 'N/A') AS violation_time,\n        NULLIF(time_first_observed, 'N/A') AS time_first_observed,\n        NULLIF(violation_county, 'N/A') AS violation_county,\n        NULLIF(violation_in_front_of_or_opposite, 'N/A') AS violation_in_front_of_or_opposite,\n        NULLIF(intersecting_street, 'N/A') AS intersecting_street,\n        CAST(NULLIF(date_first_observed, 'N/A') AS DATE) AS date_first_observed,\n        NULLIF(law_section, 'N/A') AS law_section,\n        NULLIF(sub_division, 'N/A') AS sub_division,\n        NULLIF(violation_legal_code, 'N/A') AS violation_legal_code,\n        NULLIF(days_parking_in_effect____, 'N/A') AS days_parking_in_effect,\n        NULLIF(from_hours_in_effect, 'N/A') AS from_hours_in_effect,\n        NULLIF(to_hours_in_effect, 'N/A') AS to_hours_in_effect,\n        NULLIF(vehicle_color, 'N/A') AS vehicle_color,\n        CAST(NULLIF(unregistered_vehicle, 'N/A') AS BOOLEAN) AS unregistered_vehicle,\n        CAST(NULLIF(vehicle_year, 'N/A') AS INT) AS vehicle_year,\n        NULLIF(meter_number, 'N/A') AS meter_number,\n        CAST(NULLIF(feet_from_curb, 'N/A') AS INT) AS feet_from_curb,\n        NULLIF(violation_post_code, 'N/A') AS violation_post_code,\n        NULLIF(violation_description, 'N/A') AS violation_description,\n        CAST(NULLIF(no_standing_or_stopping_violation, 'N/A') AS BOOLEAN) AS no_standing_or_stopping_violation,\n        CAST(NULLIF(hydrant_violation, 'N/A') AS BOOLEAN) AS hydrant_violation,\n        CAST(NULLIF(double_parking_violation, 'N/A') AS BOOLEAN) AS double_parking_violation\n    FROM PARKING_DB.PARKING_SCHEMA.PARKING_VIOLATIONS_2016\n\n),\nenhanced_data AS (\n    \n    SELECT\n        *,\n        EXTRACT(YEAR FROM CURRENT_DATE) - vehicle_year AS vehicle_age,\n        CASE \n            WHEN violation_county = 'MN' THEN TRUE\n            ELSE FALSE\n        END AS is_manhattan_96th_st_below\n    FROM base_data\n\n)\nSELECT * FROM enhanced_data\n),  __dbt__cte__bronze_parking_violations_2017 as (\n-- models/bronze/bronze_parking_violations.sql\nWITH base_data AS (\n    \n    SELECT \n        CAST(NULLIF(summons_number, 'N/A') AS BIGINT) AS summons_number,\n        NULLIF(plate_id, 'N/A') AS plate_id,\n        NULLIF(registration_state, 'N/A') AS registration_state,\n        NULLIF(plate_type, 'N/A') AS plate_type,\n        CAST(NULLIF(issue_date, 'N/A') AS DATE) AS issue_date,\n        CAST(NULLIF(violation_code, 'N/A') AS INT) AS violation_code,\n        NULLIF(vehicle_body_type, 'N/A') AS vehicle_body_type,\n        NULLIF(vehicle_make, 'N/A') AS vehicle_make,\n        NULLIF(issuing_agency, 'N/A') AS issuing_agency,\n        CAST(NULLIF(street_code1, 'N/A') AS INT) AS street_code1,\n        CAST(NULLIF(street_code2, 'N/A') AS INT) AS street_code2,\n        CAST(NULLIF(street_code3, 'N/A') AS INT) AS street_code3,\n        CAST(NULLIF(vehicle_expiration_date, 'N/A') AS DATE) AS vehicle_expiration_date,\n        NULLIF(violation_location, 'N/A') AS violation_location,\n        CAST(NULLIF(violation_precinct, 'N/A') AS INT) AS violation_precinct,\n        CAST(NULLIF(issuer_precinct, 'N/A') AS INT) AS issuer_precinct,\n        NULLIF(issuer_code, 'N/A') AS issuer_code,\n        NULLIF(issuer_command, 'N/A') AS issuer_command,\n        NULLIF(issuer_squad, 'N/A') AS issuer_squad,\n        NULLIF(violation_time, 'N/A') AS violation_time,\n        NULLIF(time_first_observed, 'N/A') AS time_first_observed,\n        NULLIF(violation_county, 'N/A') AS violation_county,\n        NULLIF(violation_in_front_of_or_opposite, 'N/A') AS violation_in_front_of_or_opposite,\n        NULLIF(intersecting_street, 'N/A') AS intersecting_street,\n        CAST(NULLIF(date_first_observed, 'N/A') AS DATE) AS date_first_observed,\n        NULLIF(law_section, 'N/A') AS law_section,\n        NULLIF(sub_division, 'N/A') AS sub_division,\n        NULLIF(violation_legal_code, 'N/A') AS violation_legal_code,\n        NULLIF(days_parking_in_effect____, 'N/A') AS days_parking_in_effect,\n        NULLIF(from_hours_in_effect, 'N/A') AS from_hours_in_effect,\n        NULLIF(to_hours_in_effect, 'N/A') AS to_hours_in_effect,\n        NULLIF(vehicle_color, 'N/A') AS vehicle_color,\n        CAST(NULLIF(unregistered_vehicle, 'N/A') AS BOOLEAN) AS unregistered_vehicle,\n        CAST(NULLIF(vehicle_year, 'N/A') AS INT) AS vehicle_year,\n        NULLIF(meter_number, 'N/A') AS meter_number,\n        CAST(NULLIF(feet_from_curb, 'N/A') AS INT) AS feet_from_curb,\n        NULLIF(violation_post_code, 'N/A') AS violation_post_code,\n        NULLIF(violation_description, 'N/A') AS violation_description,\n        CAST(NULLIF(no_standing_or_stopping_violation, 'N/A') AS BOOLEAN) AS no_standing_or_stopping_violation,\n        CAST(NULLIF(hydrant_violation, 'N/A') AS BOOLEAN) AS hydrant_violation,\n        CAST(NULLIF(double_parking_violation, 'N/A') AS BOOLEAN) AS double_parking_violation\n    FROM PARKING_DB.PARKING_SCHEMA.PARKING_VIOLATIONS_2017\n\n),\nenhanced_data AS (\n    \n    SELECT\n        *,\n        EXTRACT(YEAR FROM CURRENT_DATE) - vehicle_year AS vehicle_age,\n        CASE \n            WHEN violation_county = 'MN' THEN TRUE\n            ELSE FALSE\n        END AS is_manhattan_96th_st_below\n    FROM base_data\n\n)\nSELECT * FROM enhanced_data\n),  __dbt__cte__bronze_parking_violations_2018 as (\n-- models/bronze/bronze_parking_violations.sql\nWITH base_data AS (\n    \n    SELECT \n        CAST(NULLIF(summons_number, 'N/A') AS BIGINT) AS summons_number,\n        NULLIF(plate_id, 'N/A') AS plate_id,\n        NULLIF(registration_state, 'N/A') AS registration_state,\n        NULLIF(plate_type, 'N/A') AS plate_type,\n        CAST(NULLIF(issue_date, 'N/A') AS DATE) AS issue_date,\n        CAST(NULLIF(violation_code, 'N/A') AS INT) AS violation_code,\n        NULLIF(vehicle_body_type, 'N/A') AS vehicle_body_type,\n        NULLIF(vehicle_make, 'N/A') AS vehicle_make,\n        NULLIF(issuing_agency, 'N/A') AS issuing_agency,\n        CAST(NULLIF(street_code1, 'N/A') AS INT) AS street_code1,\n        CAST(NULLIF(street_code2, 'N/A') AS INT) AS street_code2,\n        CAST(NULLIF(street_code3, 'N/A') AS INT) AS street_code3,\n        CAST(NULLIF(vehicle_expiration_date, 'N/A') AS DATE) AS vehicle_expiration_date,\n        NULLIF(violation_location, 'N/A') AS violation_location,\n        CAST(NULLIF(violation_precinct, 'N/A') AS INT) AS violation_precinct,\n        CAST(NULLIF(issuer_precinct, 'N/A') AS INT) AS issuer_precinct,\n        NULLIF(issuer_code, 'N/A') AS issuer_code,\n        NULLIF(issuer_command, 'N/A') AS issuer_command,\n        NULLIF(issuer_squad, 'N/A') AS issuer_squad,\n        NULLIF(violation_time, 'N/A') AS violation_time,\n        NULLIF(time_first_observed, 'N/A') AS time_first_observed,\n        NULLIF(violation_county, 'N/A') AS violation_county,\n        NULLIF(violation_in_front_of_or_opposite, 'N/A') AS violation_in_front_of_or_opposite,\n        NULLIF(intersecting_street, 'N/A') AS intersecting_street,\n        CAST(NULLIF(date_first_observed, 'N/A') AS DATE) AS date_first_observed,\n        NULLIF(law_section, 'N/A') AS law_section,\n        NULLIF(sub_division, 'N/A') AS sub_division,\n        NULLIF(violation_legal_code, 'N/A') AS violation_legal_code,\n        NULLIF(days_parking_in_effect____, 'N/A') AS days_parking_in_effect,\n        NULLIF(from_hours_in_effect, 'N/A') AS from_hours_in_effect,\n        NULLIF(to_hours_in_effect, 'N/A') AS to_hours_in_effect,\n        NULLIF(vehicle_color, 'N/A') AS vehicle_color,\n        CAST(NULLIF(unregistered_vehicle, 'N/A') AS BOOLEAN) AS unregistered_vehicle,\n        CAST(NULLIF(vehicle_year, 'N/A') AS INT) AS vehicle_year,\n        NULLIF(meter_number, 'N/A') AS meter_number,\n        CAST(NULLIF(feet_from_curb, 'N/A') AS INT) AS feet_from_curb,\n        NULLIF(violation_post_code, 'N/A') AS violation_post_code,\n        NULLIF(violation_description, 'N/A') AS violation_description,\n        CAST(NULLIF(no_standing_or_stopping_violation, 'N/A') AS BOOLEAN) AS no_standing_or_stopping_violation,\n        CAST(NULLIF(hydrant_violation, 'N/A') AS BOOLEAN) AS hydrant_violation,\n        CAST(NULLIF(double_parking_violation, 'N/A') AS BOOLEAN) AS double_parking_violation\n    FROM PARKING_DB.PARKING_SCHEMA.PARKING_VIOLATIONS_2018\n\n),\nenhanced_data AS (\n    \n    SELECT\n        *,\n        EXTRACT(YEAR FROM CURRENT_DATE) - vehicle_year AS vehicle_age,\n        CASE \n            WHEN violation_county = 'MN' THEN TRUE\n            ELSE FALSE\n        END AS is_manhattan_96th_st_below\n    FROM base_data\n\n)\nSELECT * FROM enhanced_data\n),  __dbt__cte__bronze_parking_violations_2019 as (\n-- models/bronze/bronze_parking_violations.sql\nWITH base_data AS (\n    SELECT \n        CAST(summons_number AS BIGINT) AS summons_number,\n        plate_id,\n        registration_state,\n        plate_type,\n        CAST(issue_date AS DATE) AS issue_date,\n        CAST(violation_code AS INT) AS violation_code,\n        vehicle_body_type,\n        vehicle_make,\n        issuing_agency,\n        CAST(street_code1 AS INT) AS street_code1,\n        CAST(street_code2 AS INT) AS street_code2,\n        CAST(street_code3 AS INT) AS street_code3,\n        CAST(vehicle_expiration_date AS DATE) AS vehicle_expiration_date,\n        violation_location,\n        CAST(violation_precinct AS INT) AS violation_precinct,\n        CAST(issuer_precinct AS INT) AS issuer_precinct,\n        issuer_code,\n        issuer_command,\n        issuer_squad,\n        violation_time,\n        time_first_observed,\n        violation_county,\n        violation_in_front_of_or_opposite,\n        intersecting_street,\n        CAST(date_first_observed AS DATE) AS date_first_observed,\n        law_section,\n        sub_division,\n        violation_legal_code,\n        days_parking_in_effect AS days_parking_in_effect,\n        from_hours_in_effect,\n        to_hours_in_effect,\n        vehicle_color,\n        CAST(unregistered_vehicle AS BOOLEAN) AS unregistered_vehicle,\n        CAST(vehicle_year AS INT) AS vehicle_year,\n        meter_number,\n        CAST(feet_from_curb AS INT) AS feet_from_curb,\n        violation_post_code,\n        violation_description,\n        CAST(no_standing_or_stopping_violation AS BOOLEAN) AS no_standing_or_stopping_violation,\n        CAST(hydrant_violation AS BOOLEAN) AS hydrant_violation,\n        CAST(double_parking_violation AS BOOLEAN) AS double_parking_violation\n    FROM PARKING_DB.PARKING_SCHEMA.PARKING_VIOLATIONS_2019\n),\nenhanced_data AS (\n    \n    SELECT\n        *,\n        EXTRACT(YEAR FROM CURRENT_DATE) - vehicle_year AS vehicle_age,\n        CASE \n            WHEN violation_county = 'MN' THEN TRUE\n            ELSE FALSE\n        END AS is_manhattan_96th_st_below\n    FROM base_data\n\n)\nSELECT * FROM enhanced_data\n), violations_2014 AS (\n    SELECT * FROM __dbt__cte__bronze_parking_violations_2014\n),\nviolations_2016 AS (\n    SELECT * FROM __dbt__cte__bronze_parking_violations_2016\n),\nviolations_2017 AS (\n    SELECT * FROM __dbt__cte__bronze_parking_violations_2017\n),\nviolations_2018 AS (\n    SELECT * FROM __dbt__cte__bronze_parking_violations_2018\n),\nviolations_2019 AS (\n    SELECT * FROM __dbt__cte__bronze_parking_violations_2019\n),\nall_violations AS (\n    SELECT * FROM violations_2014\n    UNION ALL\n    SELECT * FROM violations_2016\n    UNION ALL\n    SELECT * FROM violations_2017\n    UNION ALL\n    SELECT * FROM violations_2018\n    UNION ALL\n    SELECT * FROM violations_2019\n)\nSELECT * FROM all_violations", "relation_name": "PARKING_DB.PARKING_SCHEMA.silver_merge_all_parking_violations_MN"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.200260Z", "completed_at": "2024-07-15T15:26:30.206296Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.206743Z", "completed_at": "2024-07-15T15:26:30.206756Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007632732391357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_nyc_parking_violations.silver_parking_violations_code_MN", "compiled": true, "compiled_code": "WITH  __dbt__cte__bronze_parking_violations_code as (\n-- models/bronze/bronze_parking_violations_code.sql\nWITH base_data AS (\n    SELECT \n        \n    CAST(code AS INT) AS violation_code,\n    UPPER(TRIM(definition)) AS code_description,\n    CAST(manhattan_96th_st__below AS INT) AS manhattan_96th_st_below,\n    CAST(all_other_areas AS INT) AS all_other_areas\n\n    FROM PARKING_DB.PARKING_SCHEMA.PARKING_VIOLATIONS_CODE\n),\ncategorized_data AS (\n    SELECT\n        \n    *,\n    CASE\n        WHEN manhattan_96th_st_below = all_other_areas THEN 'Uniform Rate'\n        ELSE 'Different Rate'\n    END AS rate_type\n\n    FROM base_data\n)\nSELECT\n    violation_code,\n    code_description,\n    manhattan_96th_st_below,\n    all_other_areas,\n    rate_type\nFROM categorized_data\n), manhattan_violation_codes AS (\n    SELECT\n        violation_code,\n        code_description,\n        TRUE AS is_manhattan_96th_st_below,\n        manhattan_96th_st_below AS fee_usd,\n        rate_type\n    FROM\n        __dbt__cte__bronze_parking_violations_code\n),\nall_other_violation_codes AS (\n    SELECT\n        violation_code,\n        code_description,\n        FALSE AS is_manhattan_96th_st_below,\n        all_other_areas AS fee_usd,\n        rate_type\n    FROM\n        __dbt__cte__bronze_parking_violations_code\n)\n\nSELECT * FROM manhattan_violation_codes\nUNION ALL\nSELECT * FROM all_other_violation_codes\nORDER BY fee_usd ASC", "relation_name": "PARKING_DB.PARKING_SCHEMA.silver_parking_violations_code_MN"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.209435Z", "completed_at": "2024-07-15T15:26:30.212733Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.213167Z", "completed_at": "2024-07-15T15:26:30.213176Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0048787593841552734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_nyc_parking_violations.silver_violations_tickets", "compiled": true, "compiled_code": "SELECT\n    CAST(violations.summons_number AS STRING) AS summons_number,\n    violations.registration_state,\n    violations.plate_type,\n    violations.issue_date,\n    violations.vehicle_body_type,\n    violations.vehicle_make,\n    violations.vehicle_expiration_date,\n    CAST(violations.violation_precinct AS STRING) AS violation_precinct,\n    CAST(violations.issuer_precinct AS STRING) AS issuer_precinct,\n    violations.issuer_squad,\n    violations.violation_time,\n    violations.violation_county,\n    violations.vehicle_color,\n    violations.vehicle_year,\n    violations.vehicle_age,\n    codes.violation_code AS violation_code,\n    codes.code_description,\n    codes.fee_usd,\n    codes.rate_type\nFROM\n    PARKING_DB.PARKING_SCHEMA.silver_merge_all_parking_violations_MN AS violations\nLEFT JOIN\n    PARKING_DB.PARKING_SCHEMA.silver_parking_violations_code_MN AS codes \nON\n    violations.violation_code = codes.violation_code \n    AND violations.is_manhattan_96th_st_below = codes.is_manhattan_96th_st_below\nWHERE\n    violations.issue_date IS NOT NULL\n    AND violations.summons_number IS NOT NULL\n    AND violations.registration_state IS NOT NULL\n    AND violations.plate_type IS NOT NULL\n    AND violations.vehicle_body_type IS NOT NULL\n    AND violations.vehicle_make IS NOT NULL\n    AND violations.vehicle_expiration_date IS NOT NULL\n    AND violations.violation_precinct IS NOT NULL\n    AND violations.issuer_precinct IS NOT NULL\n    AND violations.issuer_squad IS NOT NULL\n    AND violations.violation_time IS NOT NULL\n    AND violations.violation_county IS NOT NULL\n    AND violations.vehicle_color IS NOT NULL\n    AND violations.vehicle_year IS NOT NULL\n    AND violations.vehicle_age IS NOT NULL\n    AND codes.violation_code IS NOT NULL\n    AND codes.code_description IS NOT NULL\n    AND codes.fee_usd IS NOT NULL\n    AND codes.rate_type IS NOT NULL", "relation_name": "PARKING_DB.PARKING_SCHEMA.silver_violations_tickets"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.215895Z", "completed_at": "2024-07-15T15:26:30.219082Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.219507Z", "completed_at": "2024-07-15T15:26:30.219514Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004666566848754883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_nyc_parking_violations.gold_ticket_metrics", "compiled": true, "compiled_code": "SELECT\n    code_description,\n    violation_code,\n    COUNT(summons_number) AS ticket_count,\n    SUM(fee_usd) AS total_revenue_usd,\n    SUM(fee_usd)/COUNT(summons_number) AS avg_fee_per_ticket\nFROM\n    PARKING_DB.PARKING_SCHEMA.silver_violations_tickets\nWHERE\n    code_description IS NOT NULL\nGROUP BY\n    violation_code, code_description\nORDER BY\n    total_revenue_usd DESC", "relation_name": "PARKING_DB.PARKING_SCHEMA.gold_ticket_metrics"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.222298Z", "completed_at": "2024-07-15T15:26:30.225397Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.225833Z", "completed_at": "2024-07-15T15:26:30.225840Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00455021858215332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_nyc_parking_violations.gold_tickets_year", "compiled": true, "compiled_code": "SELECT\n    EXTRACT(YEAR FROM issue_date) AS year_p,\n    COUNT(summons_number) AS ticket_count,\n    SUM(fee_usd) AS total_revenue_usd\nFROM\n    PARKING_DB.PARKING_SCHEMA.silver_violations_tickets\nWHERE\n    fee_usd IS NOT NULL\n    AND EXTRACT(YEAR FROM issue_date) < 2024\nGROUP BY\n    year_p\nORDER BY\n    total_revenue_usd DESC", "relation_name": "PARKING_DB.PARKING_SCHEMA.gold_tickets_year"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.227986Z", "completed_at": "2024-07-15T15:26:30.230929Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.231373Z", "completed_at": "2024-07-15T15:26:30.231380Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004346609115600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_nyc_parking_violations.gold_vehicles_metrics", "compiled": true, "compiled_code": "SELECT\n    code_description,\n    violation_code,\n    COUNT(summons_number) AS ticket_count,\n    SUM(fee_usd) AS total_revenue_usd\nFROM\n    PARKING_DB.PARKING_SCHEMA.silver_violations_tickets\nWHERE\n    fee_usd IS NOT NULL\nGROUP BY\n    violation_code, code_description\nORDER BY\n    total_revenue_usd DESC", "relation_name": "PARKING_DB.PARKING_SCHEMA.gold_vehicles_metrics"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.233532Z", "completed_at": "2024-07-15T15:26:30.237455Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.237878Z", "completed_at": "2024-07-15T15:26:30.237884Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00539398193359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_nyc_parking_violations.gold_yearly_average_violation_fee", "compiled": true, "compiled_code": "WITH yearly_avg_fee AS (\n    SELECT\n        EXTRACT(YEAR FROM issue_date) AS violation_year,\n        AVG(fee_usd) AS average_fee\n    FROM\n        PARKING_DB.PARKING_SCHEMA.silver_violations_tickets\n    WHERE\n        EXTRACT(YEAR FROM issue_date) < 2024\n    GROUP BY\n        violation_year\n)\nSELECT\n    violation_year,\n    average_fee\nFROM\n    yearly_avg_fee\nORDER BY\n    violation_year", "relation_name": "PARKING_DB.PARKING_SCHEMA.gold_yearly_average_violation_fee"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.239890Z", "completed_at": "2024-07-15T15:26:30.242706Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.243234Z", "completed_at": "2024-07-15T15:26:30.243243Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004309177398681641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_nyc_parking_violations.gold_yearly_violation_trends_by_code", "compiled": true, "compiled_code": "WITH yearly_code_summary AS (\n    SELECT\n        EXTRACT(YEAR FROM issue_date) AS violation_year,\n        violation_code,\n        code_description,\n        COUNT(*) AS violation_count,\n        SUM(fee_usd) AS total_fees_collected\n    FROM\n        PARKING_DB.PARKING_SCHEMA.silver_violations_tickets\n    WHERE\n        EXTRACT(YEAR FROM issue_date) < 2024\n    GROUP BY\n        violation_year,\n        violation_code,\n        code_description\n)\nSELECT\n    violation_year,\n    violation_code,\n    code_description,\n    violation_count,\n    total_fees_collected\nFROM\n    yearly_code_summary\nWHERE\n    violation_code IN (\n        SELECT violation_code\n        FROM yearly_code_summary\n        GROUP BY violation_code\n        ORDER BY SUM(violation_count) DESC\n        LIMIT 5\n    )\nORDER BY\n    violation_year,\n    violation_code", "relation_name": "PARKING_DB.PARKING_SCHEMA.gold_yearly_violation_trends_by_code"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.245655Z", "completed_at": "2024-07-15T15:26:30.249465Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.249997Z", "completed_at": "2024-07-15T15:26:30.250006Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00541377067565918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_nyc_parking_violations.gold_yearly_violations_by_county", "compiled": true, "compiled_code": "WITH yearly_county_summary AS (\n    SELECT\n        EXTRACT(YEAR FROM issue_date) AS violation_year,\n        violation_county,\n        COUNT(*) AS total_violations,\n        SUM(fee_usd) AS total_fees_collected\n    FROM\n        PARKING_DB.PARKING_SCHEMA.silver_violations_tickets\n    WHERE\n        EXTRACT(YEAR FROM issue_date) < 2024\n    GROUP BY\n        violation_year,\n        violation_county\n)\nSELECT\n    violation_year,\n    violation_county,\n    total_violations,\n    total_fees_collected\nFROM\n    yearly_county_summary\nORDER BY\n    violation_year,\n    total_violations DESC", "relation_name": "PARKING_DB.PARKING_SCHEMA.gold_yearly_violations_by_county"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.252162Z", "completed_at": "2024-07-15T15:26:30.255948Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.256365Z", "completed_at": "2024-07-15T15:26:30.256373Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0051538944244384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_nyc_parking_violations.gold_yearly_violations_summary", "compiled": true, "compiled_code": "WITH yearly_summary AS (\n    SELECT\n        EXTRACT(YEAR FROM issue_date) AS violation_year,\n        COUNT(*) AS total_violations,\n        SUM(fee_usd) AS total_fees_collected\n    FROM\n        PARKING_DB.PARKING_SCHEMA.silver_violations_tickets\n    WHERE\n        EXTRACT(YEAR FROM issue_date) < 2024\n    GROUP BY\n        violation_year\n)\nSELECT\n    violation_year,\n    total_violations,\n    total_fees_collected\nFROM\n    yearly_summary\nORDER BY\n    violation_year", "relation_name": "PARKING_DB.PARKING_SCHEMA.gold_yearly_violations_summary"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.258541Z", "completed_at": "2024-07-15T15:26:30.269013Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.269498Z", "completed_at": "2024-07-15T15:26:30.269508Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011981725692749023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.dbt_utils_expression_is_true_gold_ticket_metrics_avg_fee_per_ticket___0.8097e1a133", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom PARKING_DB.PARKING_SCHEMA.gold_ticket_metrics\n\nwhere not(avg_fee_per_ticket >= 0)\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.dbt_utils_expression_is_true_g_3506daaa0829fb7fd83a464908b13e1c"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.271605Z", "completed_at": "2024-07-15T15:26:30.276265Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.276832Z", "completed_at": "2024-07-15T15:26:30.276842Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006220579147338867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.dbt_utils_expression_is_true_gold_ticket_metrics_ticket_count___0.340d5ab3f2", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom PARKING_DB.PARKING_SCHEMA.gold_ticket_metrics\n\nwhere not(ticket_count >= 0)\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.dbt_utils_expression_is_true_g_cb88c23ddc4f8e9f6d3d7ec5db3d5964"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.279093Z", "completed_at": "2024-07-15T15:26:30.283581Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.284067Z", "completed_at": "2024-07-15T15:26:30.284076Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006012439727783203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.dbt_utils_expression_is_true_gold_ticket_metrics_total_revenue_usd___0.d5299656bd", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom PARKING_DB.PARKING_SCHEMA.gold_ticket_metrics\n\nwhere not(total_revenue_usd >= 0)\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.dbt_utils_expression_is_true_g_b319e185939f54f6ef69c2b82ca3fd67"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.286143Z", "completed_at": "2024-07-15T15:26:30.295644Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.296209Z", "completed_at": "2024-07-15T15:26:30.296231Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011156320571899414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_ticket_metrics_avg_fee_per_ticket.7083296b6a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_ticket_metrics\nwhere avg_fee_per_ticket is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_ticket_metrics_avg_fee_per_ticket"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.298672Z", "completed_at": "2024-07-15T15:26:30.302603Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.303043Z", "completed_at": "2024-07-15T15:26:30.303051Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005481243133544922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_ticket_metrics_code_description.2653afe82f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_ticket_metrics\nwhere code_description is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_ticket_metrics_code_description"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.305009Z", "completed_at": "2024-07-15T15:26:30.308779Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.309224Z", "completed_at": "2024-07-15T15:26:30.309232Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005178928375244141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_ticket_metrics_ticket_count.d112187724", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_ticket_metrics\nwhere ticket_count is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_ticket_metrics_ticket_count"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.311384Z", "completed_at": "2024-07-15T15:26:30.315788Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.316260Z", "completed_at": "2024-07-15T15:26:30.316269Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00596928596496582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_ticket_metrics_total_revenue_usd.9ff6aa2198", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_ticket_metrics\nwhere total_revenue_usd is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_ticket_metrics_total_revenue_usd"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.318599Z", "completed_at": "2024-07-15T15:26:30.323929Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.324392Z", "completed_at": "2024-07-15T15:26:30.324402Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0068433284759521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_ticket_metrics_violation_code.4c3ab3e1f5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_ticket_metrics\nwhere violation_code is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_ticket_metrics_violation_code"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.326505Z", "completed_at": "2024-07-15T15:26:30.332498Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.333032Z", "completed_at": "2024-07-15T15:26:30.333042Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0075418949127197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.unique_gold_ticket_metrics_violation_code.b64842de33", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    violation_code as unique_field,\n    count(*) as n_records\n\nfrom PARKING_DB.PARKING_SCHEMA.gold_ticket_metrics\nwhere violation_code is not null\ngroup by violation_code\nhaving count(*) > 1\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.unique_gold_ticket_metrics_violation_code"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.335133Z", "completed_at": "2024-07-15T15:26:30.339658Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.340271Z", "completed_at": "2024-07-15T15:26:30.340280Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00614166259765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.dbt_utils_expression_is_true_gold_tickets_year_ticket_count___0.0cd5cebf87", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom PARKING_DB.PARKING_SCHEMA.gold_tickets_year\n\nwhere not(ticket_count >= 0)\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.dbt_utils_expression_is_true_gold_tickets_year_ticket_count___0"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.343665Z", "completed_at": "2024-07-15T15:26:30.350714Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.351528Z", "completed_at": "2024-07-15T15:26:30.351552Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009735822677612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.dbt_utils_expression_is_true_gold_tickets_year_total_revenue_usd___0.fdd874a92b", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom PARKING_DB.PARKING_SCHEMA.gold_tickets_year\n\nwhere not(total_revenue_usd >= 0)\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.dbt_utils_expression_is_true_g_0c4fe76b08729f49bca848fcd41c26f3"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.354463Z", "completed_at": "2024-07-15T15:26:30.359087Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.359579Z", "completed_at": "2024-07-15T15:26:30.359588Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006188154220581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_tickets_year_ticket_count.d26e9425a0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_tickets_year\nwhere ticket_count is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_tickets_year_ticket_count"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.362035Z", "completed_at": "2024-07-15T15:26:30.366959Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.367512Z", "completed_at": "2024-07-15T15:26:30.367524Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0066280364990234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_tickets_year_total_revenue_usd.ff2c6b3d77", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_tickets_year\nwhere total_revenue_usd is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_tickets_year_total_revenue_usd"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.369892Z", "completed_at": "2024-07-15T15:26:30.374736Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.375225Z", "completed_at": "2024-07-15T15:26:30.375233Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006346464157104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_tickets_year_year_p.cceeaa4243", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_tickets_year\nwhere year_p is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_tickets_year_year_p"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.377343Z", "completed_at": "2024-07-15T15:26:30.381835Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.382340Z", "completed_at": "2024-07-15T15:26:30.382349Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006051063537597656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.dbt_utils_expression_is_true_gold_vehicles_metrics_ticket_count___0.c63cccb230", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom PARKING_DB.PARKING_SCHEMA.gold_vehicles_metrics\n\nwhere not(ticket_count >= 0)\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.dbt_utils_expression_is_true_g_9654a7021c420b2f513a3b9f98e0f5b5"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.384487Z", "completed_at": "2024-07-15T15:26:30.388819Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.389373Z", "completed_at": "2024-07-15T15:26:30.389383Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0059359073638916016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.dbt_utils_expression_is_true_gold_vehicles_metrics_total_revenue_usd___0.4da6d69728", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom PARKING_DB.PARKING_SCHEMA.gold_vehicles_metrics\n\nwhere not(total_revenue_usd >= 0)\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.dbt_utils_expression_is_true_g_f65630838419792fbdf9012690f89a8e"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.391671Z", "completed_at": "2024-07-15T15:26:30.395691Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.396176Z", "completed_at": "2024-07-15T15:26:30.396188Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005648374557495117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_vehicles_metrics_code_description.86364cc1cc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_vehicles_metrics\nwhere code_description is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_vehicles_metrics_code_description"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.399299Z", "completed_at": "2024-07-15T15:26:30.403153Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.403612Z", "completed_at": "2024-07-15T15:26:30.403620Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005421638488769531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_vehicles_metrics_ticket_count.8454d43272", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_vehicles_metrics\nwhere ticket_count is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_vehicles_metrics_ticket_count"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.405710Z", "completed_at": "2024-07-15T15:26:30.409632Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.410115Z", "completed_at": "2024-07-15T15:26:30.410123Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00541377067565918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_vehicles_metrics_total_revenue_usd.c81db1ef49", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_vehicles_metrics\nwhere total_revenue_usd is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_vehicles_metrics_total_revenue_usd"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.412389Z", "completed_at": "2024-07-15T15:26:30.417678Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.418157Z", "completed_at": "2024-07-15T15:26:30.418167Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006886005401611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_vehicles_metrics_violation_code.9497f78e90", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_vehicles_metrics\nwhere violation_code is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_vehicles_metrics_violation_code"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.420440Z", "completed_at": "2024-07-15T15:26:30.424437Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.424891Z", "completed_at": "2024-07-15T15:26:30.424901Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0055925846099853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.unique_gold_vehicles_metrics_violation_code.4545e731c5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    violation_code as unique_field,\n    count(*) as n_records\n\nfrom PARKING_DB.PARKING_SCHEMA.gold_vehicles_metrics\nwhere violation_code is not null\ngroup by violation_code\nhaving count(*) > 1\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.unique_gold_vehicles_metrics_violation_code"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.427130Z", "completed_at": "2024-07-15T15:26:30.431156Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.431636Z", "completed_at": "2024-07-15T15:26:30.431644Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0056040287017822266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.dbt_utils_expression_is_true_gold_yearly_average_violation_fee_average_fee___0.cf78c2af85", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_average_violation_fee\n\nwhere not(average_fee >= 0)\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.dbt_utils_expression_is_true_g_982326544e1fc3de917ac4ad7ae25c4d"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.433794Z", "completed_at": "2024-07-15T15:26:30.438086Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.438578Z", "completed_at": "2024-07-15T15:26:30.438587Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005818367004394531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_yearly_average_violation_fee_average_fee.1a4919392d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_average_violation_fee\nwhere average_fee is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_yearly_average_violation_fee_average_fee"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.440820Z", "completed_at": "2024-07-15T15:26:30.445924Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.447075Z", "completed_at": "2024-07-15T15:26:30.447090Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00745391845703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_yearly_average_violation_fee_violation_year.803de860d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_average_violation_fee\nwhere violation_year is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_yearly_average_violation_fee_violation_year"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.451477Z", "completed_at": "2024-07-15T15:26:30.461120Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.461940Z", "completed_at": "2024-07-15T15:26:30.461952Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012558221817016602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.dbt_utils_expression_is_true_gold_yearly_violation_trends_by_code_total_fees_collected___0.2d2ba45bbf", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violation_trends_by_code\n\nwhere not(total_fees_collected >= 0)\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.dbt_utils_expression_is_true_g_e6988841e27071e23c1c9cc9ae24ca53"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.466687Z", "completed_at": "2024-07-15T15:26:30.471585Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.472181Z", "completed_at": "2024-07-15T15:26:30.472192Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007318258285522461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.dbt_utils_expression_is_true_gold_yearly_violation_trends_by_code_violation_count___0.a5792caa2d", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violation_trends_by_code\n\nwhere not(violation_count >= 0)\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.dbt_utils_expression_is_true_g_8877787f42307ee067a046a08ba449bb"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.474523Z", "completed_at": "2024-07-15T15:26:30.478493Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.479016Z", "completed_at": "2024-07-15T15:26:30.479025Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00562739372253418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_yearly_violation_trends_by_code_code_description.5f45cdb63c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violation_trends_by_code\nwhere code_description is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_yearly_violation_trends_by_code_code_description"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.481394Z", "completed_at": "2024-07-15T15:26:30.486568Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.487230Z", "completed_at": "2024-07-15T15:26:30.487241Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006966114044189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_yearly_violation_trends_by_code_total_fees_collected.f3d7b70ea5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violation_trends_by_code\nwhere total_fees_collected is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_yearly_violation_f188227f8054e1032a6bf89b38dba69d"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.489632Z", "completed_at": "2024-07-15T15:26:30.493896Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.494346Z", "completed_at": "2024-07-15T15:26:30.494354Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005857229232788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_yearly_violation_trends_by_code_violation_code.7e548fdc4e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violation_trends_by_code\nwhere violation_code is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_yearly_violation_trends_by_code_violation_code"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.496658Z", "completed_at": "2024-07-15T15:26:30.502568Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.503330Z", "completed_at": "2024-07-15T15:26:30.503351Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00785684585571289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_yearly_violation_trends_by_code_violation_count.14dd63128f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violation_trends_by_code\nwhere violation_count is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_yearly_violation_trends_by_code_violation_count"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.506982Z", "completed_at": "2024-07-15T15:26:30.515569Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.516243Z", "completed_at": "2024-07-15T15:26:30.516254Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010605812072753906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_yearly_violation_trends_by_code_violation_year.a0356ddcc0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violation_trends_by_code\nwhere violation_year is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_yearly_violation_trends_by_code_violation_year"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.518757Z", "completed_at": "2024-07-15T15:26:30.525920Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.527292Z", "completed_at": "2024-07-15T15:26:30.527304Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00973200798034668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.dbt_utils_expression_is_true_gold_yearly_violations_by_county_total_fees_collected___0.9fadd61919", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violations_by_county\n\nwhere not(total_fees_collected >= 0)\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.dbt_utils_expression_is_true_g_b1915a18b0b141f6a0d2c1859282b863"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.529850Z", "completed_at": "2024-07-15T15:26:30.534329Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.534803Z", "completed_at": "2024-07-15T15:26:30.534812Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006211996078491211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.dbt_utils_expression_is_true_gold_yearly_violations_by_county_total_violations___0.dcdf42f18a", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violations_by_county\n\nwhere not(total_violations >= 0)\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.dbt_utils_expression_is_true_g_be8841bd7333ea234412c10d10c98aa4"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.536988Z", "completed_at": "2024-07-15T15:26:30.540737Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.541259Z", "completed_at": "2024-07-15T15:26:30.541267Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005291461944580078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_yearly_violations_by_county_total_fees_collected.a2c955cb30", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violations_by_county\nwhere total_fees_collected is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_yearly_violations_by_county_total_fees_collected"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.543427Z", "completed_at": "2024-07-15T15:26:30.547994Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.548514Z", "completed_at": "2024-07-15T15:26:30.548524Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006150484085083008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_yearly_violations_by_county_total_violations.acfdd6c410", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violations_by_county\nwhere total_violations is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_yearly_violations_by_county_total_violations"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.551303Z", "completed_at": "2024-07-15T15:26:30.556578Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.557335Z", "completed_at": "2024-07-15T15:26:30.557351Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0075185298919677734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_yearly_violations_by_county_violation_county.d0f42ab267", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violations_by_county\nwhere violation_county is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_yearly_violations_by_county_violation_county"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.560460Z", "completed_at": "2024-07-15T15:26:30.568917Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.569424Z", "completed_at": "2024-07-15T15:26:30.569433Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010483503341674805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_yearly_violations_by_county_violation_year.81c5e756f9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violations_by_county\nwhere violation_year is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_yearly_violations_by_county_violation_year"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.571671Z", "completed_at": "2024-07-15T15:26:30.575725Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.576217Z", "completed_at": "2024-07-15T15:26:30.576225Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0056018829345703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.dbt_utils_expression_is_true_gold_yearly_violations_summary_total_fees_collected___0.6e05c9afd9", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violations_summary\n\nwhere not(total_fees_collected >= 0)\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.dbt_utils_expression_is_true_g_5aee31395a6348a3b491459a9aa74ed2"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.579429Z", "completed_at": "2024-07-15T15:26:30.584182Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.584793Z", "completed_at": "2024-07-15T15:26:30.584807Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006794452667236328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.dbt_utils_expression_is_true_gold_yearly_violations_summary_total_violations___0.d0562f90ae", "compiled": true, "compiled_code": "\n\n\n\nselect\n    *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violations_summary\n\nwhere not(total_violations >= 0)\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.dbt_utils_expression_is_true_g_357146b8d1611d3c0de6e2243f71f7ae"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.587354Z", "completed_at": "2024-07-15T15:26:30.591630Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.592128Z", "completed_at": "2024-07-15T15:26:30.592137Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0060307979583740234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_yearly_violations_summary_total_fees_collected.b78635dca5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violations_summary\nwhere total_fees_collected is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_yearly_violations_summary_total_fees_collected"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.594307Z", "completed_at": "2024-07-15T15:26:30.598539Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.599006Z", "completed_at": "2024-07-15T15:26:30.599016Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0057277679443359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_yearly_violations_summary_total_violations.6d94a5dfac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violations_summary\nwhere total_violations is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_yearly_violations_summary_total_violations"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-15T15:26:30.601225Z", "completed_at": "2024-07-15T15:26:30.605458Z"}, {"name": "execute", "started_at": "2024-07-15T15:26:30.605984Z", "completed_at": "2024-07-15T15:26:30.605993Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0057926177978515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_nyc_parking_violations.not_null_gold_yearly_violations_summary_violation_year.ad14113d9f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom PARKING_DB.PARKING_SCHEMA.gold_yearly_violations_summary\nwhere violation_year is null\n\n\n", "relation_name": "PARKING_DB.PARKING_SCHEMA_dbt_test__audit.not_null_gold_yearly_violations_summary_violation_year"}], "elapsed_time": 2.614236831665039, "args": {"strict_mode": false, "log_path": "/opt/dbt/logs", "use_colors": true, "defer": false, "log_format_file": "debug", "partial_parse_file_diff": true, "compile": true, "project_dir": "/opt/dbt", "require_explicit_package_overrides_for_builtin_materializations": true, "version_check": true, "favor_state": false, "log_level": "info", "quiet": false, "partial_parse": true, "warn_error_options": {"include": [], "exclude": []}, "static": false, "use_colors_file": true, "introspect": true, "log_level_file": "debug", "empty_catalog": false, "profiles_dir": "/opt/dbt", "which": "generate", "populate_cache": true, "indirect_selection": "eager", "write_json": true, "printer_width": 80, "invocation_command": "dbt docs generate --profiles-dir /opt/dbt --project-dir /opt/dbt", "cache_selected_only": false, "send_anonymous_usage_stats": true, "exclude": [], "print": true, "log_file_max_bytes": 10485760, "macro_debugging": false, "enable_legacy_logger": false, "require_resource_names_without_spaces": false, "vars": {}, "show_resource_report": false, "static_parser": true, "source_freshness_run_project_hooks": false, "select": [], "log_format": "default"}}